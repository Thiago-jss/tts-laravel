name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  tests:
    name: Run Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2', '8.3']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, dom, fileinfo, sqlite3
          coverage: none
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --no-dev

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Create storage directories
        run: |
          mkdir -p storage/app/public/audio
          php artisan storage:link

      - name: Run PHPUnit tests
        env:
          ELEVEN_API_KEY: ${{ secrets.ELEVEN_API_KEY || 'dummy-key-for-testing' }}
          ELEVEN_VOICE_ID: ${{ secrets.ELEVEN_VOICE_ID || 'ErXwobaYiN019PkySvjV' }}
        run: php artisan test

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-dev

      - name: Run Laravel Pint (code style)
        run: |
          if [ -f vendor/bin/pint ]; then
            ./vendor/bin/pint --test || echo "Pint found issues but continuing..."
          else
            echo "Laravel Pint not installed, skipping..."
          fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-dev

      - name: Run security audit
        run: composer audit || echo "Security audit found issues but continuing..."
